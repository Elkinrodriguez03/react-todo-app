{"ast":null,"code":"var _jsxFileName = \"/home/elkin/basic_programming/Software_development/react-course/todo-react-app/src/App/index.js\",\n  _s = $RefreshSig$();\nimport { TodoCounter } from '../TodoCounter';\nimport { TodoSearch } from '../TodoSearch';\nimport { TodoList } from '../TodoList';\nimport { CreateTodoButton } from '../CreateTodoButton';\nimport { TodoItem } from '../TodoItem';\nimport React from 'react';\n\n// const defaultTodos = [\n//   { text: 'Todo item 1', completed: true},\n//   { text: 'Todo item 2', completed: true},\n//   { text: 'Todo item 3', completed: false},\n//   { text: 'Todo item 4', completed: false},\n//   { text: 'LALALALLALA', completed: false},\n// ]\n\n// localStorage.setItem('TODOs_V1', JSON.stringify(defaultTodos));\n// localStorage.removeItem('TODOs_V1');\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [todos, saveTodos] = useLocalStorage('TODOs_V1', []);\n  const [searchValue, setSearchValue] = React.useState('');\n  const completedTodos = todos.filter(todo => !!todo.completed).length;\n  const totalTodos = todos.length;\n  const searchedTodos = todos.filter(todo => {\n    const todoText = todo.text.toLowerCase();\n    const searchText = searchValue.toLowerCase();\n    return todoText.includes(searchText);\n  });\n  const todoDone = text => {\n    const newTodos = [...todos];\n    const todoIndex = newTodos.findIndex(todo => todo.text === text);\n    newTodos[todoIndex].completed = true;\n    saveTodos(newTodos);\n  };\n  const deleteTodo = text => {\n    const newTodos = [...todos];\n    const todoIndex = newTodos.findIndex(todo => todo.text === text);\n    newTodos.splice(todoIndex, 1);\n    saveTodos(newTodos);\n  };\n  console.log('The users are looking for ' + searchValue);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TodoCounter, {\n      completed: completedTodos,\n      total: totalTodos\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoSearch, {\n      searchValue: searchValue,\n      setSearchValue: setSearchValue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n      children: searchedTodos.map(todo => /*#__PURE__*/_jsxDEV(TodoItem, {\n        text: todo.text,\n        completed: todo.completed,\n        onComplete: () => todoDone(todo.text),\n        onDelete: () => deleteTodo(todo.text)\n      }, todo.text, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CreateTodoButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"EYsrDwfpGttiZWPU2ClZtw5M6YA=\", true);\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["TodoCounter","TodoSearch","TodoList","CreateTodoButton","TodoItem","React","App","todos","saveTodos","useLocalStorage","searchValue","setSearchValue","useState","completedTodos","filter","todo","completed","length","totalTodos","searchedTodos","todoText","text","toLowerCase","searchText","includes","todoDone","newTodos","todoIndex","findIndex","deleteTodo","splice","console","log","map"],"sources":["/home/elkin/basic_programming/Software_development/react-course/todo-react-app/src/App/index.js"],"sourcesContent":["import { TodoCounter } from '../TodoCounter';\nimport { TodoSearch } from '../TodoSearch';\nimport { TodoList } from '../TodoList';\nimport { CreateTodoButton } from '../CreateTodoButton';\nimport { TodoItem } from '../TodoItem';\nimport React from 'react';\n\n// const defaultTodos = [\n//   { text: 'Todo item 1', completed: true},\n//   { text: 'Todo item 2', completed: true},\n//   { text: 'Todo item 3', completed: false},\n//   { text: 'Todo item 4', completed: false},\n//   { text: 'LALALALLALA', completed: false},\n// ]\n\n// localStorage.setItem('TODOs_V1', JSON.stringify(defaultTodos));\n// localStorage.removeItem('TODOs_V1');\n\nfunction App() {\n  const [todos, saveTodos] = useLocalStorage('TODOs_V1', []);\n  const [searchValue, setSearchValue] = React.useState('');\n\n  const completedTodos = todos.filter(todo => !!todo.completed).length;\n  const totalTodos = todos.length;\n\n  const searchedTodos = todos.filter(\n    (todo) => {\n      const todoText = todo.text.toLowerCase();\n      const searchText = searchValue.toLowerCase();\n      return todoText.includes(searchText);\n    }\n  );\n\n  const todoDone = (text) => {\n    const newTodos = [...todos];\n    const todoIndex = newTodos.findIndex(\n      (todo) => todo.text === text\n    );\n    newTodos[todoIndex].completed = true;\n    saveTodos(newTodos);\n  }\n\n  const deleteTodo = (text) => {\n    const newTodos = [...todos];\n    const todoIndex = newTodos.findIndex(\n      (todo) => todo.text === text\n    );\n    newTodos.splice(todoIndex, 1);\n    saveTodos(newTodos); \n  }\n\n  console.log('The users are looking for ' + searchValue);\n\n  return (\n    <React.Fragment>\n      <TodoCounter \n        completed={completedTodos}\n        total={totalTodos}\n      /> \n      <TodoSearch \n        searchValue={searchValue}\n        setSearchValue={setSearchValue}\n      />\n\n      <TodoList>\n        {searchedTodos.map(todo => (\n          <TodoItem \n            key={todo.text} \n            text={todo.text}\n            completed={todo.completed}\n            onComplete={() => todoDone(todo.text)} \n            onDelete={() => deleteTodo(todo.text)}\n          />\n        ))}\n      </TodoList>\n\n      <CreateTodoButton />\n\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,WAAW,QAAQ,gBAAgB;AAC5C,SAASC,UAAU,QAAQ,eAAe;AAC1C,SAASC,QAAQ,QAAQ,aAAa;AACtC,SAASC,gBAAgB,QAAQ,qBAAqB;AACtD,SAASC,QAAQ,QAAQ,aAAa;AACtC,OAAOC,KAAK,MAAM,OAAO;;AAEzB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAAA;AAEA,SAASC,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,SAAS,CAAC,GAAGC,eAAe,CAAC,UAAU,EAAE,EAAE,CAAC;EAC1D,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGN,KAAK,CAACO,QAAQ,CAAC,EAAE,CAAC;EAExD,MAAMC,cAAc,GAAGN,KAAK,CAACO,MAAM,CAACC,IAAI,IAAI,CAAC,CAACA,IAAI,CAACC,SAAS,CAAC,CAACC,MAAM;EACpE,MAAMC,UAAU,GAAGX,KAAK,CAACU,MAAM;EAE/B,MAAME,aAAa,GAAGZ,KAAK,CAACO,MAAM,CAC/BC,IAAI,IAAK;IACR,MAAMK,QAAQ,GAAGL,IAAI,CAACM,IAAI,CAACC,WAAW,EAAE;IACxC,MAAMC,UAAU,GAAGb,WAAW,CAACY,WAAW,EAAE;IAC5C,OAAOF,QAAQ,CAACI,QAAQ,CAACD,UAAU,CAAC;EACtC,CAAC,CACF;EAED,MAAME,QAAQ,GAAIJ,IAAI,IAAK;IACzB,MAAMK,QAAQ,GAAG,CAAC,GAAGnB,KAAK,CAAC;IAC3B,MAAMoB,SAAS,GAAGD,QAAQ,CAACE,SAAS,CACjCb,IAAI,IAAKA,IAAI,CAACM,IAAI,KAAKA,IAAI,CAC7B;IACDK,QAAQ,CAACC,SAAS,CAAC,CAACX,SAAS,GAAG,IAAI;IACpCR,SAAS,CAACkB,QAAQ,CAAC;EACrB,CAAC;EAED,MAAMG,UAAU,GAAIR,IAAI,IAAK;IAC3B,MAAMK,QAAQ,GAAG,CAAC,GAAGnB,KAAK,CAAC;IAC3B,MAAMoB,SAAS,GAAGD,QAAQ,CAACE,SAAS,CACjCb,IAAI,IAAKA,IAAI,CAACM,IAAI,KAAKA,IAAI,CAC7B;IACDK,QAAQ,CAACI,MAAM,CAACH,SAAS,EAAE,CAAC,CAAC;IAC7BnB,SAAS,CAACkB,QAAQ,CAAC;EACrB,CAAC;EAEDK,OAAO,CAACC,GAAG,CAAC,4BAA4B,GAAGtB,WAAW,CAAC;EAEvD,oBACE,QAAC,KAAK,CAAC,QAAQ;IAAA,wBACb,QAAC,WAAW;MACV,SAAS,EAAEG,cAAe;MAC1B,KAAK,EAAEK;IAAW;MAAA;MAAA;MAAA;IAAA,QAClB,eACF,QAAC,UAAU;MACT,WAAW,EAAER,WAAY;MACzB,cAAc,EAAEC;IAAe;MAAA;MAAA;MAAA;IAAA,QAC/B,eAEF,QAAC,QAAQ;MAAA,UACNQ,aAAa,CAACc,GAAG,CAAClB,IAAI,iBACrB,QAAC,QAAQ;QAEP,IAAI,EAAEA,IAAI,CAACM,IAAK;QAChB,SAAS,EAAEN,IAAI,CAACC,SAAU;QAC1B,UAAU,EAAE,MAAMS,QAAQ,CAACV,IAAI,CAACM,IAAI,CAAE;QACtC,QAAQ,EAAE,MAAMQ,UAAU,CAACd,IAAI,CAACM,IAAI;MAAE,GAJjCN,IAAI,CAACM,IAAI;QAAA;QAAA;QAAA;MAAA,QAMjB;IAAC;MAAA;MAAA;MAAA;IAAA,QACO,eAEX,QAAC,gBAAgB;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QAEL;AAErB;AAAC,GA9DQf,GAAG;AAAA,KAAHA,GAAG;AAgEZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}